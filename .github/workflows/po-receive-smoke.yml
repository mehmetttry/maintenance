name: PO Receive Smoke
on:
  workflow_dispatch:
  push:

jobs:
  smoke:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "backend/requirements.txt") {
            python -m pip install -r backend/requirements.txt
          }
          python -m pip install uvicorn "SQLAlchemy>=2" fastapi python-dotenv httpx

      - name: Seed demo data (best-effort)
        shell: pwsh
        env:
          DATABASE_URL: sqlite:///./test.db
          MSSQL_DSN: sqlite:///./test.db
        run: |
          $ErrorActionPreference = 'Continue'
          if (Test-Path "backend\scripts\seed_demo.py") {
            Push-Location backend
            $env:DATABASE_URL = $env:MSSQL_DSN
            python .\scripts\seed_demo.py
            Pop-Location
          }
          exit 0

      - name: Start API & Run smoketest (same step)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $apiPort = 8011
          $apiHost = "127.0.0.1"
          $wd      = (Resolve-Path backend)

          # .env.ci
          $envFile = Join-Path $wd '.env.ci'
          $envText = "MSSQL_DSN=sqlite:///./test.db`nDATABASE_URL=sqlite:///./test.db`nJWT_SECRET=test-secret-for-ci`nAPI_BASE=http://127.0.0.1:8011"
          Set-Content -Path $envFile -Value $envText -Encoding UTF8

          $outLog = Join-Path $env:RUNNER_TEMP 'uvicorn_out.log'
          $errLog = Join-Path $env:RUNNER_TEMP 'uvicorn_err.log'

          $args = @(
            "-m","uvicorn","app.main:app",
            "--host",$apiHost,"--port",$apiPort,
            "--log-level","info",
            "--env-file",".env.ci"
          )

          $p = Start-Process -FilePath "python" -ArgumentList $args -WorkingDirectory $wd -RedirectStandardOutput $outLog -RedirectStandardError $errLog -PassThru

          try {
            # Wait health
            $health = "http://$apiHost`:$apiPort/health"
            $ok = $false
            foreach ($i in 1..60) {
              try { Invoke-WebRequest -Uri $health -UseBasicParsing -TimeoutSec 3 | Out-Null; $ok = $true; break }
              catch { Start-Sleep -Seconds 1 }
            }
            if (-not $ok) { throw "API not healthy: $health" }

            # Smoketest
            if (Test-Path ".\backend\tests\po-receive-smoketest.ps1") {
              .\backend\tests\po-receive-smoketest.ps1 -Api "http://$apiHost`:$apiPort" -PartId 1 -Cleanup -CI
            } else {
              Write-Host "Smoketest script not found, skipping."
            }
          }
          finally {
            try { Stop-Process -Id $p.Id -Force -ErrorAction SilentlyContinue } catch {}
            if (Test-Path $outLog) { Write-Host "----- uvicorn_out.log (last 200) -----"; Get-Content $outLog -Tail 200 | Write-Host }
            if (Test-Path $errLog) { Write-Host "----- uvicorn_err.log (last 200) -----"; Get-Content $errLog -Tail 200 | Write-Host }
          }
