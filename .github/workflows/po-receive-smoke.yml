name: PO Receive Smoke
on:
  workflow_dispatch:
  push:

jobs:
  smoke:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r backend/requirements.txt
          python -m pip install "uvicorn>=0.22" "SQLAlchemy>=2" "fastapi>=0.110" "python-dotenv>=1"

      - name: Seed demo data (best-effort)
        env:
          DATABASE_URL: sqlite:///./test.db
          MSSQL_DSN:   sqlite:///./test.db
        run: |
          $ErrorActionPreference = 'Continue'
          if (Test-Path "backend/scripts/seed_demo.py") {
            Write-Host "Running seed script..."
            $code = "import os,runpy; os.chdir('backend'); os.environ['PYTHONPATH']=os.getcwd(); runpy.run_path('scripts/seed_demo.py', run_name='__main__')"
            python -c "$code"
          } else {
            Write-Host "Seed script not found. Skipping."
          }
          $global:LASTEXITCODE = 0

      # >>> API'yi başlat + smoketest'i ÇALIŞTIR + logları dök + kapat (TEK ADIM)
      - name: Run smoketest against local API (single step)
        env:
          DATABASE_URL: sqlite:///./test.db
          MSSQL_DSN:   sqlite:///./test.db
        run: |
          $ErrorActionPreference = 'Stop'
          $api  = "http://127.0.0.1:8011"
          $env:API_BASE = $api      # test scripti bunu okuyabilir
          $log = "$env:RUNNER_TEMP\uvicorn.log"

          Write-Host "Starting Uvicorn on $api"
          $proc = Start-Process -FilePath python `
            -ArgumentList "-m uvicorn app.main:app --host 127.0.0.1 --port 8011" `
            -WorkingDirectory "backend" -PassThru `
            -RedirectStandardOutput $log -RedirectStandardError $log

          try {
            # Health bekle
            $health = "$api/health"
            $ok = $false
            foreach ($i in 1..60) {
              try {
                $r = Invoke-WebRequest -Uri $health -UseBasicParsing -TimeoutSec 3
                if ($r.StatusCode -eq 200) { $ok = $true; break }
              } catch { Start-Sleep -Seconds 2 }
            }
            if (-not $ok) {
              Write-Host "---- Uvicorn log (health failed) ----"
              Get-Content $log -ErrorAction SilentlyContinue | Out-Host
              throw "API not ready: $health"
            }

            Write-Host "Using API = $api"
            # Smoketest
            .\backend\tests\po-receive-smoketest.ps1 -PartId 1 -Cleanup -CI
          }
          finally {
            # Her durumda logları göster ve süreci öldür
            Write-Host "---- Uvicorn log (final) ----"
            Get-Content $log -ErrorAction SilentlyContinue | Out-Host
            if ($proc -and -not $proc.HasExited) { Stop-Process -Id $proc.Id -Force }
          }
